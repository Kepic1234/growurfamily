repeat task.wait() until game:IsLoaded()

local Players = game.Players.LocalPlayer
local TeleportService = game:GetService("TeleportService")


local acceptedPets = getgenv().AcceptedPets or {
    ["Bunny"] = true,
    ["Turtle"] = true,
    ["Dragonfly"] = true,
    ["Disco Bee"] = true,
    ["Butterfly"] = true
}


local function waitForuFarm()
    local farm
    repeat
        task.wait()
        for _, u in pairs(workspace:WaitForChild("Farm"):GetChildren()) do
            local sign = u:FindFirstChild("Sign")
            if sign and sign:GetAttribute("_owner") == Players.Name then
                farm = u
                break
            end
        end
    until farm
    return farm
end


local function getAllPetUUIDs()
    local uuids = {}
    local farm = waitForuFarm()
    local important = farm:WaitForChild("Important")
    local physical = important:WaitForChild("Objects_Physical")

    for _, obj in ipairs(physical:GetChildren()) do
        if obj:IsA("Model") and obj.Name == "PetEgg" then
            local timeToHatch = obj:GetAttribute("TimeToHatch")
            local uuid = obj:GetAttribute("OBJECT_UUID")
            if timeToHatch == 0 and uuid then
                table.insert(uuids, uuid)
            end
        end
    end

    return uuids
end

local uuids
repeat
    uuids = getAllPetUUIDs()
    task.wait()
until #uuids > 0

local foundGoodPet = false

task.wait(15)
for _, uuid in ipairs(uuids) do
    if typeof(uuid) == "string" or typeof(uuid) == "number" then
        for _, v in next, getgc(true) do 
            if type(v) == "table" then
                local success, petData = pcall(function()
                    return rawget(v, uuid)
                end)

                if success and petData and typeof(petData) == "table" and petData.Data and petData.Data.Type then
                    local name = petData.Data.Type
                    print("Pet trouv√© :", name)

                    if acceptedPets[name] then
                        foundGoodPet = true
                        break
                    end
                end
            end
        end
        if foundGoodPet then break end
    end
end


if not foundGoodPet then
    print("BAD PET teleport...")
    queue_on_teleport(game:HttpGet("https://raw.githubusercontent.com/Kepic1234/growurfamily/refs/heads/main/v1"))

    
    if Players then
        TeleportService:Teleport(126884695634066, Players)
    else
        warn("Players.LocalPlayer is not defined")
    end
else
    print("PETLIST FOUND")
end

